@page "/Demo"
@using TauriApi.Plugins

@inject Tauri Tauri
@inject TauriDialog TauriDialog
@inject ILogger<Demo> Logger
<h3>Demo</h3>
<button @onclick="GetAllWindows">Get All Windows</button>
@foreach (var window in _windows)
{
    <div>
        <p>@window</p>
    </div>
}
<button @onclick="OpenDialog">Open File Dialog</button>

<div>
    <p>Selected files:</p>
    @foreach (var file in _openDialogResult)
    {
        <p>@file</p>
    }
</div>

@code {
    private bool _isTauri;
    private List<string> _windows = [];
    private List<string> _openDialogResult = [];

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            _isTauri = await Tauri.Core.IsTauri();
            await InitializeTauriDemo();
        }
    }

    private async Task InitializeTauriDemo()
    {
        if (!_isTauri)
        {
            return;
        }

        var window = await Tauri.Window.GetCurrentWindow();
        var label = await window.Label;
        await window.SetTitle("Demo window: " + label);
        await window.Listen<string>("my-event", async data =>
        {
            Console.WriteLine($"Received event: {data}");
            await window.Emit("my-response", $"Response to: {data}");
        });
    }

    private async Task GetAllWindows()
    {
        var windows = await Tauri.Window.GetAllWindows();
        _windows.Clear();
        foreach (var tauriWindow in windows)
        {
            var windowLabel = await tauriWindow.Label;
            _windows.Add(windowLabel);
        }

        StateHasChanged();
    }

    private async Task OpenDialog()
    {
        var pathList = await TauriDialog.Open(new OpenMultipleDialogOptions
        {
            Filters =
            [
                new DialogFilter { Name = "image", Extensions = ["png", "jpeg", "jpg", "gif"] },
            ]
        });
        _openDialogResult.Clear();
        
        foreach (var path in pathList)
        {
            _openDialogResult.Add(path);
        }

        StateHasChanged();
    }

}